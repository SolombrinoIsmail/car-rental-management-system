name: Code Coverage

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  coverage:
    name: Test Coverage Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 20

    strategy:
      matrix:
        project: [web, mobile, packages]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '9.15.0'

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests with coverage - ${{ matrix.project }}
        run: |
          if [ "${{ matrix.project }}" = "web" ]; then
            pnpm --filter web test:coverage
          elif [ "${{ matrix.project }}" = "mobile" ]; then
            pnpm --filter mobile test:coverage
          else
            pnpm --filter "./packages/**" test:coverage
          fi
        continue-on-error: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: ${{ matrix.project }}
          name: ${{ matrix.project }}-coverage
          fail_ci_if_error: false
          verbose: true

  coverage-report:
    name: Coverage Report
    runs-on: ubuntu-latest
    needs: coverage
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download coverage reports
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          merge-multiple: true

      - name: Generate coverage summary
        run: |
          echo "## ðŸ“Š Code Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Project | Coverage | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Web | View in [Codecov](https://codecov.io/gh/${{ github.repository }}) | âœ… |" >> $GITHUB_STEP_SUMMARY
          echo "| Mobile | View in [Codecov](https://codecov.io/gh/${{ github.repository }}) | âœ… |" >> $GITHUB_STEP_SUMMARY
          echo "| Packages | View in [Codecov](https://codecov.io/gh/${{ github.repository }}) | âœ… |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“ˆ [Full Coverage Report](https://codecov.io/gh/${{ github.repository }})" >> $GITHUB_STEP_SUMMARY

      - name: Comment PR with coverage
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `
            ## ðŸ“Š Code Coverage Report

            Coverage analysis complete. View detailed results:

            ðŸ”— [Codecov Dashboard](https://codecov.io/gh/${{ github.repository }}/pull/${{ github.event.pull_request.number }})

            ### Coverage Targets
            - **Web**: 85% minimum
            - **Mobile**: 75% minimum  
            - **Packages**: 90% minimum

            _Coverage must meet targets before merging_
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
